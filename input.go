package main

import "encoding/hex"

var input = []byte{201, 0, 0, 0, 1, 16, 119, 44, 57, 56, 78, 68, 129, 246, 227, 76, 211, 125, 176, 66, 60, 151 /* ここまで DCID */, 20, 126, 82, 151, 43, 80, 13, 66, 161, 191, 152, 208, 155, 13, 71, 140, 94, 181, 5, 0, 220 /* ここまで SCID */, 0, 65, 39 /* ここまで Length */, 145 /* packet number */, 246, 168, 14, 180, 217, 162, 136, 188, 251, 89, 163, 66, 240, 163, 210, 49, 163, 241, 29, 217, 146, 252, 117, 192, 168, 233, 38, 71, 221, 254, 115, 221, 143, 7, 145, 177, 228, 60, 171, 218, 44, 60, 170, 115, 212, 105, 44, 219, 163, 203, 172, 208, 155, 19, 221, 123, 234, 200, 167, 224, 83, 89, 143, 48, 99, 81, 206, 58, 98, 207, 217, 126, 201, 91, 148, 35, 56, 174, 191, 137, 18, 149, 86, 135, 222, 161, 38, 117, 34, 192, 15, 141, 169, 132, 128, 148, 180, 149, 77, 17, 30, 253, 243, 146, 169, 236, 168, 101, 163, 170, 122, 180, 106, 185, 206, 59, 87, 127, 187, 222, 78, 254, 60, 170, 239, 8, 51, 152, 164, 255, 92, 236, 171, 132, 26, 225, 24, 248, 157, 119, 61, 220, 130, 214, 104, 146, 55, 222, 246, 238, 123, 45, 92, 139, 251, 233, 169, 169, 143, 127, 60, 249, 62, 127, 82, 170, 135, 228, 118, 151, 35, 140, 10, 125, 226, 196, 58, 155, 55, 128, 92, 102, 197, 242, 242, 226, 214, 87, 214, 199, 6, 11, 156, 109, 34, 163, 94, 246, 51, 20, 41, 249, 128, 81, 221, 228, 73, 114, 106, 100, 38, 86, 150, 39, 188, 2, 194, 176, 19, 120, 241, 177, 126, 140, 208, 178, 51, 69, 16, 74, 173, 38, 0, 157, 110, 157, 134, 214, 67, 124, 224, 123, 198, 73, 214, 120, 166, 85, 132, 146, 248, 108, 158, 195, 137, 94, 75, 116, 56, 17, 64, 144, 181, 63, 232, 214, 175, 175, 101, 65, 231, 33, 12, 37, 228, 228, 179, 107, 227, 119, 101, 78, 2, 35, 254, 37, 96, 252, 176, 105, 206, 239, 218, 229, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

// refer: https://www.rfc-editor.org/rfc/rfc9001#name-client-initial
var input2, _ = hex.DecodeString("c000000001088394c8f03e5157080000449e7b9aec34d1b1c98dd7689fb8ec11d242b123dc9b")
